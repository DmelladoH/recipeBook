---
import type { IngredientGroup, ItemTuple } from "../type"

interface Props {
	recipeId: string
	ingredients: IngredientGroup[]
}

const { ingredients, recipeId } = Astro.props as Props

const ingredientsList = ingredients
	.flatMap((elem) => elem.ingredients)
	.map((elem: ItemTuple) => {
		return { ingredient: elem[0], quantity: elem[1] ? elem[1] : 1 }
	})
---

<button
	id="add-to-cart-button"
	data-data={JSON.stringify({
		id: recipeId,
		ingredients: ingredientsList,
	})}>Add to Cart</button
>

<script>
	import { addToListCart, getCartItems, remove } from "../store"
	import type { Item } from "../type"

	function updateButtonState(
		button: HTMLButtonElement,
		cart: Item[],
		ingredients: any[],
		id: string,
	) {
		const alreadyInCart = isSomeIngredientsInCart(cart, ingredients, id)
		button.textContent = alreadyInCart ? "Remove from cart" : "Add to Cart"
	}

	const isSomeIngredientsInCart = (
		cart: Item[],
		ingredientsToAdd: { ingredient: string; quantity: number }[],
		recipeId: string,
	): boolean => {
		return cart.some((cartItem) =>
			ingredientsToAdd.some(
				(ingredientToAdd) =>
					ingredientToAdd.ingredient === cartItem.ingredient &&
					cartItem.recipes.includes(recipeId),
			),
		)
	}

	function handleCartChange() {
		const button = document.querySelector(
			"#add-to-cart-button",
		) as HTMLButtonElement
		if (!button?.dataset.data) return

		const cart = getCartItems()
		const { ingredients, id } = JSON.parse(button.dataset.data)
		updateButtonState(button, cart, ingredients, id)
	}

	function onClick(event: MouseEvent) {
		const target = event.target as HTMLButtonElement
		if (!target?.dataset.data) return

		const cart = getCartItems()
		const { ingredients, id } = JSON.parse(target.dataset.data)
		const items: Item[] = ingredients.map((elem: any) => ({
			...elem,
			recipes: [id],
		}))

		if (isSomeIngredientsInCart(cart, ingredients, id)) {
			remove(items, id)
		} else {
			addToListCart(items, id)
		}

		handleCartChange()
	}

	function initializeButton() {
		const button = document.querySelector(
			"#add-to-cart-button",
		) as HTMLButtonElement
		if (!button) return

		button.addEventListener("click", onClick)
		handleCartChange()
		window.addEventListener("cartchange", handleCartChange)
	}

	document.addEventListener("astro:page-load", initializeButton)
	document.addEventListener("visibilitychange", () => {
		if (document.visibilityState === "visible") {
			initializeButton()
		}
	})
</script>
